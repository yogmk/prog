; code from the essay 'roots of lisp' by paul graham.

; assume only quote, atom, eq, car, cdr, cons and cond premitive operators.



(defun _null (x)     ; test whether the argument is an empty list
    (eq x quote()))


(defun _and (x y)     ; return t if both argument do, otherwise '()
    (cond
	    (x (cond 
		       (y 't)
		       't '()))
        't '()))

(defun _not (x)
     (cond 
	     (eq x '()) 't
		 't 't))

